[{"C:\\Users\\Adomas\\Desktop\\IT Development\\CAO\\Simple-crud\\Simple-crud\\client\\src\\index.js":"1","C:\\Users\\Adomas\\Desktop\\IT Development\\CAO\\Simple-crud\\Simple-crud\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Adomas\\Desktop\\IT Development\\CAO\\Simple-crud\\Simple-crud\\client\\src\\App.js":"3","C:\\Users\\Adomas\\Desktop\\IT Development\\CAO\\WMD\\WMD\\client\\src\\index.js":"4","C:\\Users\\Adomas\\Desktop\\IT Development\\CAO\\WMD\\WMD\\client\\src\\App.js":"5","C:\\Users\\Adomas\\Desktop\\IT Development\\CAO\\WMD\\WMD\\client\\src\\reportWebVitals.js":"6"},{"size":478,"mtime":1640541929825,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1640541745050,"results":"9","hashOfConfig":"8"},{"size":1720,"mtime":1642361259119,"results":"10","hashOfConfig":"8"},{"size":478,"mtime":1640541929825,"results":"11","hashOfConfig":"12"},{"size":8534,"mtime":1643484842649,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1640541745050,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10m7lz2",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"7tlabj",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"C:\\Users\\Adomas\\Desktop\\IT Development\\CAO\\Simple-crud\\Simple-crud\\client\\src\\index.js",[],"C:\\Users\\Adomas\\Desktop\\IT Development\\CAO\\Simple-crud\\Simple-crud\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Adomas\\Desktop\\IT Development\\CAO\\Simple-crud\\Simple-crud\\client\\src\\App.js",["29","30","31"],"C:\\Users\\Adomas\\Desktop\\IT Development\\CAO\\WMD\\WMD\\client\\src\\index.js",[],["32","33"],"C:\\Users\\Adomas\\Desktop\\IT Development\\CAO\\WMD\\WMD\\client\\src\\App.js",["34","35","36","37","38"],"import \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport Axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\n\r\nfunction App() {\r\n    const [name, setName] = useState(\"\");\r\n    const [materialgroup, setMaterialGroup] = useState(\"\");\r\n    const [dimension, setDimension] = useState(\"\");\r\n    const [quantity, setQuantity] = useState(0);\r\n    const [price, setPrice] = useState(0);\r\n    const [orderdate, setOrderDate] = useState(\"\");\r\n    const [receiptdate, setReceiptDate] = useState(\"\");\r\n    const [supplier, setSupplier] = useState(\"\");\r\n    const [employeeList, setEmployeeList] = useState([]);\r\n    const [newReceiptDate, setNewReceiptDate] = useState(0);\r\n\r\n    const addEmployee = () => {\r\n        Axios.post('http://localhost:3001/create', {\r\n            name: name,\r\n            materialgroup: materialgroup,\r\n            dimension: dimension,\r\n            quantity: quantity,\r\n            price: price,\r\n            orderdate: orderdate,\r\n            receiptdate: receiptdate,\r\n            supplier: supplier,\r\n\r\n\r\n        }).then(() => {\r\n            console.log(\"success\");\r\n            getEmployees();\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getEmployees();\r\n      }, [])\r\n\r\n    const getEmployees = () => {\r\n        Axios.get('http://localhost:3001/employees').then((response) => {\r\n            setEmployeeList(response.data)\r\n        });\r\n    }\r\n\r\n    const updateReceiptDate = (id) => {\r\n        Axios.put(\"http://localhost:3001/update\", { receiptdate: newReceiptDate, id: id }).then(\r\n            (response) => {\r\n                setEmployeeList(\r\n                    employeeList.map((val) => {\r\n                        return val.id == id\r\n                            ? {\r\n                                id: val.id,\r\n                                name: val.name,\r\n                                materialgroup: val.materialgroup,\r\n                                dimension: val.dimension,\r\n                                quantity: val.quantity,\r\n                                price: val.price,\r\n                                orderdate: val.orderdate,\r\n                                receiptdate: newReceiptDate,\r\n                                supplier: val.supplier,\r\n                            }\r\n                            : val;\r\n                    })\r\n                );\r\n            }\r\n        );\r\n    };\r\n\r\n    const deleteMaterial = (id) => {\r\n        Axios.delete(`http://localhost:3001/delete/${id}`).then((response) => {\r\n          setEmployeeList(\r\n            employeeList.filter((val) => {\r\n              return val.id != id;\r\n            })\r\n          );\r\n        });\r\n      };\r\n\r\n    const displayInfo = () => {\r\n        console.log(name, dimension);\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"addInformation\">\r\n\r\n                <label>Material group:</label>\r\n                <select id=\"selectId\"name=\"nyc\" onChange={(event) => {\r\n                    setMaterialGroup(event.target.value);\r\n                }}>\r\n                    <option value=\"Lakštai\">Lakštai</option>\r\n                    <option value=\"Kampuočiai\">Kampuočiai</option>\r\n                    <option value=\"Juostos\">Juostos</option>\r\n                    <option value=\"Apvalūs vamzdžiai\">Apvalūs vamzdžiai</option>\r\n                    <option value=\"Kvadratiniai vamzdžiai\">Kvadratiniai vamzdžiai</option>\r\n                    <option value=\"Varžtai\">Varžtai</option>\r\n                    <option value=\"Poveržlės\">Poveržlės</option>\r\n                    <option value=\"Veržlės\">Veržlės</option>\r\n                </select>\r\n\r\n\r\n                <label>Name:</label>\r\n                <input type=\"text\"\r\n                    onChange={(event) => {\r\n                        setName(event.target.value);\r\n                    }}\r\n                />\r\n\r\n                <label>Dimension:</label>\r\n                <input type=\"text\"\r\n                    onChange={(event) => {\r\n                        setDimension(event.target.value);\r\n                    }}\r\n                />\r\n\r\n                <label>Quantity:</label>\r\n                <input type=\"number\"\r\n                    onChange={(event) => {\r\n                        setQuantity(event.target.value);\r\n                    }}\r\n                />\r\n\r\n                <label>Price:</label>\r\n                <input type=\"number\"\r\n                    onChange={(event) => {\r\n                        setPrice(event.target.value);\r\n                    }}\r\n                />\r\n\r\n                <label>Supplier:</label>\r\n                <input type=\"text\"\r\n                    onChange={(event) => {\r\n                        setSupplier(event.target.value);\r\n                    }}\r\n                />\r\n\r\n                <label>Set order date:</label>\r\n                <input type=\"date\"\r\n                    onChange={(event) => {\r\n                        setOrderDate(event.target.value);\r\n                    }}\r\n                />\r\n\r\n                <label>Set receipt date:</label>\r\n                <input type=\"date\"\r\n                    onChange={(event) => {\r\n                        setReceiptDate(event.target.value);\r\n                    }}\r\n                />\r\n\r\n                <button class=\"addButtonGroup\" onClick={addEmployee}>Add Material</button>\r\n\r\n                <div className=\"employees\">\r\n                    <button class=\"addButtonGroup\" onClick={getEmployees}>Show All Materials</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"listMaterial\">\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-dark\">\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Material group</th>\r\n                            <th>Name</th>\r\n                            <th>Dimension</th>\r\n                            <th>Quantity</th>\r\n                            <th>Price</th>\r\n                            <th>Supplier</th>\r\n                            <th>Order date</th>\r\n                            <th>Receipt date</th>\r\n                            <th colspan=\"2\">Update Receipt Date</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {/*Rendering data*/}\r\n                        {employeeList.map((val, key) => {\r\n                            return (\r\n                                <tr key={key} >\r\n                                    <td>{val.id}</td>\r\n                                    <td>{val.materialgroup}</td>\r\n                                    <td>{val.name}</td>\r\n                                    <td>{val.dimension}</td>\r\n                                    <td>{val.quantity}</td>\r\n                                    <td>{val.price}</td>\r\n                                    <td>{val.supplier}</td>\r\n                                    <td>{val.orderdate}</td>\r\n                                    <td>{val.receiptdate}</td>\r\n\r\n                                    <td class=\"inputDate\">\r\n                                        <input type=\"text\" placeholder=\"yyyy-mm-dd\" onChange={(event) => {\r\n                                            setNewReceiptDate(event.target.value);\r\n                                        }}\r\n                                        />\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <a href=\"#\" class=\"btn border-shadow update\" onClick={() => {\r\n                                            updateReceiptDate(val.id);\r\n                                        }}>\r\n                                            <span><i class=\"fas fa-edit\"></i></span>\r\n                                        </a>\r\n\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <a href=\"#\" class=\"btn border-shadow delete\" onClick={() => {\r\n                                            deleteMaterial(val.id);\r\n                                        }}>\r\n                                            <span><i class=\"fas fa-trash-alt\"></i></span>\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default App;","C:\\Users\\Adomas\\Desktop\\IT Development\\CAO\\WMD\\WMD\\client\\src\\reportWebVitals.js",[],{"ruleId":"39","severity":1,"message":"40","line":12,"column":7,"nodeType":"41","messageId":"42","endLine":12,"endColumn":19},{"ruleId":"39","severity":1,"message":"43","line":12,"column":21,"nodeType":"41","messageId":"42","endLine":12,"endColumn":36},{"ruleId":"39","severity":1,"message":"44","line":34,"column":7,"nodeType":"41","messageId":"42","endLine":34,"endColumn":18},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":51,"column":39,"nodeType":"51","messageId":"52","endLine":51,"endColumn":41},{"ruleId":"49","severity":1,"message":"53","line":74,"column":29,"nodeType":"51","messageId":"52","endLine":74,"endColumn":31},{"ruleId":"39","severity":1,"message":"44","line":80,"column":11,"nodeType":"41","messageId":"42","endLine":80,"endColumn":22},{"ruleId":"54","severity":1,"message":"55","line":198,"column":41,"nodeType":"56","endLine":200,"endColumn":44},{"ruleId":"54","severity":1,"message":"55","line":207,"column":41,"nodeType":"56","endLine":209,"endColumn":44},"no-unused-vars","'employeeList' is assigned a value but never used.","Identifier","unusedVar","'setEmployeeList' is assigned a value but never used.","'displayInfo' is assigned a value but never used.","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]